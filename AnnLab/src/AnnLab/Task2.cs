using AnnLab.Range;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace AnnLab
{
    public class Task2
    {
        public static readonly Matrix<int>[] DIGITS = new Matrix<int>[5];

        #region DIGITS

        static Task2() {
            DIGITS[0] = new Matrix<int>(16, 10);
            DIGITS[0][Ranges.All, Ranges.All] = new int[][] {
                new int[] {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
                new int[] {-1, -1, -1,  1,  1,  1,  1, -1, -1, -1},
                new int[] {-1, -1,  1,  1,  1,  1,  1,  1, -1, -1},
                new int[] {-1,  1,  1,  1, -1, -1,  1,  1,  1, -1},
                new int[] {-1,  1,  1,  1, -1, -1,  1,  1,  1, -1},
                new int[] {-1,  1,  1,  1, -1, -1,  1,  1,  1, -1},
                new int[] {-1,  1,  1,  1, -1, -1,  1,  1,  1, -1},
                new int[] {-1,  1,  1,  1, -1, -1,  1,  1,  1, -1},
                new int[] {-1,  1,  1,  1, -1, -1,  1,  1,  1, -1},
                new int[] {-1,  1,  1,  1, -1, -1,  1,  1,  1, -1},
                new int[] {-1,  1,  1,  1, -1, -1,  1,  1,  1, -1},
                new int[] {-1,  1,  1,  1, -1, -1,  1,  1,  1, -1},
                new int[] {-1,  1,  1,  1, -1, -1,  1,  1,  1, -1},
                new int[] {-1, -1,  1,  1,  1,  1,  1,  1, -1, -1},
                new int[] {-1, -1, -1,  1,  1,  1,  1, -1, -1, -1},
                new int[] {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
            };

            DIGITS[1] = new Matrix<int>(16, 10);
            DIGITS[1][Ranges.All, Ranges.All] = new int[][]
            {
                new int[] {-1, -1, -1,  1,  1,  1,  1, -1, -1, -1},
                new int[] {-1, -1, -1,  1,  1,  1,  1, -1, -1, -1},
                new int[] {-1, -1, -1,  1,  1,  1,  1, -1, -1, -1},
                new int[] {-1, -1, -1,  1,  1,  1,  1, -1, -1, -1},
                new int[] {-1, -1, -1,  1,  1,  1,  1, -1, -1, -1},
                new int[] {-1, -1, -1,  1,  1,  1,  1, -1, -1, -1},
                new int[] {-1, -1, -1,  1,  1,  1,  1, -1, -1, -1},
                new int[] {-1, -1, -1,  1,  1,  1,  1, -1, -1, -1},
                new int[] {-1, -1, -1,  1,  1,  1,  1, -1, -1, -1},
                new int[] {-1, -1, -1,  1,  1,  1,  1, -1, -1, -1},
                new int[] {-1, -1, -1,  1,  1,  1,  1, -1, -1, -1},
                new int[] {-1, -1, -1,  1,  1,  1,  1, -1, -1, -1},
                new int[] {-1, -1, -1,  1,  1,  1,  1, -1, -1, -1},
                new int[] {-1, -1, -1,  1,  1,  1,  1, -1, -1, -1},
                new int[] {-1, -1, -1,  1,  1,  1,  1, -1, -1, -1},
                new int[] {-1, -1, -1,  1,  1,  1,  1, -1, -1, -1},
            };

            DIGITS[2] = new Matrix<int>(16, 10);
            DIGITS[2][Ranges.All, Ranges.All] = new int[][]
            {
                new int[] { 1,  1,  1,  1,  1,  1,  1,  1, -1, -1},
                new int[] { 1,  1,  1,  1,  1,  1,  1,  1, -1, -1},
                new int[] {-1, -1, -1, -1, -1,  1,  1,  1, -1, -1},
                new int[] {-1, -1, -1, -1, -1,  1,  1,  1, -1, -1},
                new int[] {-1, -1, -1, -1, -1,  1,  1,  1, -1, -1},
                new int[] {-1, -1, -1, -1, -1,  1,  1,  1, -1, -1},
                new int[] {-1, -1, -1, -1, -1,  1,  1,  1, -1, -1},
                new int[] { 1,  1,  1,  1,  1,  1,  1,  1, -1, -1},
                new int[] { 1,  1,  1,  1,  1,  1,  1,  1, -1, -1},
                new int[] { 1,  1, -1, -1, -1, -1, -1, -1, -1, -1},
                new int[] { 1,  1, -1, -1, -1, -1, -1, -1, -1, -1},
                new int[] { 1,  1, -1, -1, -1, -1, -1, -1, -1, -1},
                new int[] { 1,  1, -1, -1, -1, -1, -1, -1, -1, -1},
                new int[] { 1,  1, -1, -1, -1, -1, -1, -1, -1, -1},
                new int[] { 1,  1,  1,  1,  1,  1,  1,  1, -1, -1},
                new int[] { 1,  1,  1,  1,  1,  1,  1,  1, -1, -1},
            };

            DIGITS[3] = new Matrix<int>(16, 10);
            DIGITS[3][Ranges.All, Ranges.All] = new int[][]
            {
                new int[] {-1, -1,  1,  1,  1,  1,  1,  1, -1, -1},
                new int[] {-1, -1,  1,  1,  1,  1,  1,  1,  1, -1},
                new int[] {-1, -1, -1, -1, -1, -1,  1,  1,  1, -1},
                new int[] {-1, -1, -1, -1, -1, -1,  1,  1,  1, -1},
                new int[] {-1, -1, -1, -1, -1, -1,  1,  1,  1, -1},
                new int[] {-1, -1, -1, -1, -1, -1,  1,  1,  1, -1},
                new int[] {-1, -1, -1, -1, -1, -1,  1,  1,  1, -1},
                new int[] {-1, -1, -1, -1,  1,  1,  1,  1, -1, -1},
                new int[] {-1, -1, -1, -1,  1,  1,  1,  1, -1, -1},
                new int[] {-1, -1, -1, -1, -1, -1,  1,  1,  1, -1},
                new int[] {-1, -1, -1, -1, -1, -1,  1,  1,  1, -1},
                new int[] {-1, -1, -1, -1, -1, -1,  1,  1,  1, -1},
                new int[] {-1, -1, -1, -1, -1, -1,  1,  1,  1, -1},
                new int[] {-1, -1, -1, -1, -1, -1,  1,  1,  1, -1},
                new int[] {-1, -1,  1,  1,  1,  1,  1,  1,  1, -1},
                new int[] {-1, -1,  1,  1,  1,  1,  1,  1, -1, -1},
            };

            DIGITS[4] = new Matrix<int>(16, 10);
            DIGITS[4][Ranges.All, Ranges.All] = new int[][]
            {
                new int[] {-1,  1,  1, -1, -1, -1, -1,  1,  1, -1},
                new int[] {-1,  1,  1, -1, -1, -1, -1,  1,  1, -1},
                new int[] {-1,  1,  1, -1, -1, -1, -1,  1,  1, -1},
                new int[] {-1,  1,  1, -1, -1, -1, -1,  1,  1, -1},
                new int[] {-1,  1,  1, -1, -1, -1, -1,  1,  1, -1},
                new int[] {-1,  1,  1, -1, -1, -1, -1,  1,  1, -1},
                new int[] {-1,  1,  1, -1, -1, -1, -1,  1,  1, -1},
                new int[] {-1,  1,  1,  1,  1,  1,  1,  1,  1, -1},
                new int[] {-1,  1,  1,  1,  1,  1,  1,  1,  1, -1},
                new int[] {-1, -1, -1, -1, -1, -1, -1,  1,  1, -1},
                new int[] {-1, -1, -1, -1, -1, -1, -1,  1,  1, -1},
                new int[] {-1, -1, -1, -1, -1, -1, -1,  1,  1, -1},
                new int[] {-1, -1, -1, -1, -1, -1, -1,  1,  1, -1},
                new int[] {-1, -1, -1, -1, -1, -1, -1,  1,  1, -1},
                new int[] {-1, -1, -1, -1, -1, -1, -1,  1,  1, -1},
                new int[] {-1, -1, -1, -1, -1, -1, -1,  1,  1, -1},
            };
        }

        #endregion

        public static void Run(IEnumerable<string> args)
        {

        }
    }
}
